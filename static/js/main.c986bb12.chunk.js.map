{"version":3,"sources":["components/Menu.jsx","components/Quiz.jsx","components/App.jsx","index.js"],"names":["Menu","props","state","categories","fetch","then","data","json","setState","trivia_categories","className","style","textAlign","class","this","map","category","fontSize","name","to","id","React","Component","Quiz","getOptions","optionsArray","quizData","currentQuestionIndex","incorrect_answers","push","correct_answer","sort","Math","random","getAnswers","answers","forEach","question","handleClick","e","target","dataset","done","prevState","score","output","userAnswer","userData","concat","options","error","isFinished","prevValue","innerText","quizId","match","params","results","index","value","max","option","onClick","NoMatch","App","viewBox","xmlns","version","x","y","width","height","fill","d","marginTop","path","exact","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c986bb12.chunk.js","sourcesContent":["import React from \"react\";\nimport { Switch, Route, Link } from \"react-router-dom\";\n\nclass Menu extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      categories: null,\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"https://opentdb.com/api_category.php\")\n      .then((data) => {\n        return data.json();\n      })\n      .then((data) => {\n        this.setState({\n          categories: data.trivia_categories,\n        });\n      });\n  }\n\n  render() {\n    return (\n      <div className=\"quiz\">\n        <div\n          className=\"title my-5 has-text-info-dark\"\n          style={{ textAlign: \"center\" }}\n        >\n          Popular Quizzes\n        </div>\n        <div class=\"columns is-centered is-multiline mx-4 py-6\">\n          {this.state.categories\n            ? this.state.categories.map((category) => {\n                return (\n                  <span\n                    key={category.id}\n                    class=\"column is-3 box my-4  py-6 has-background-light has-text-centered mx-4\"\n                  >\n                    <div\n                      className=\"subtitle has-text-dark\"\n                      style={{ fontSize: \"1.75rem\" }}\n                    >\n                      {category.name}\n                    </div>\n                    <Link to={`/quiz/${category.id}`}>\n                      <div className=\"button is-warning \" data-id={category.id}>\n                        Take this Quiz\n                      </div>\n                    </Link>\n                  </span>\n                );\n              })\n            : \"Loading...\"}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Menu;\n","import React from \"react\";\nimport { Switch, Route, Link } from \"react-router-dom\";\n\nclass Quiz extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      quizId: null,\n      quizData: null,\n      userData: [],\n      options: null,\n      score: 0,\n      currentQuestionIndex: 0,\n      done: false,\n      userAnswer: null,\n      error: null,\n      isFinished: false,\n      output: [],\n    };\n  }\n\n  getOptions = () => {\n    let optionsArray = [\n      ...this.state.quizData[`${this.state.currentQuestionIndex}`]\n        .incorrect_answers,\n    ];\n    optionsArray.push(\n      this.state.quizData[`${this.state.currentQuestionIndex}`].correct_answer\n    );\n\n    optionsArray.sort(() => Math.random() - 0.5);\n\n    return optionsArray;\n  };\n\n  getAnswers = () => {\n    let answers = [];\n    this.state.quizData.forEach((question) => {\n      answers.push(question.correct_answer);\n    });\n    return answers;\n  };\n\n  handleClick = (e) => {\n    if (e.target.dataset.id === \"next\") {\n      if (this.state.currentQuestionIndex < 9) {\n        if (this.state.done) {\n          this.setState(\n            (prevState) => {\n              let score = this.state.score;\n              let output = \"\";\n              this.state.userAnswer ===\n                this.state.quizData[this.state.currentQuestionIndex]\n                  .correct_answer && score++;\n              this.state.userAnswer ===\n              this.state.quizData[this.state.currentQuestionIndex]\n                .correct_answer\n                ? (output = \"✅\")\n                : (output = \"❌\");\n\n              return {\n                currentQuestionIndex: prevState.currentQuestionIndex + 1,\n                done: false,\n                userData: prevState.userData.concat(this.state.userAnswer),\n                score: score,\n                output: prevState.output.concat(output),\n              };\n            },\n            () => {\n              this.setState({\n                options: this.getOptions(),\n              });\n            }\n          );\n        } else {\n          this.setState({\n            error: \"Select an option to proceed...\",\n          });\n        }\n      } else {\n        if (this.state.done) {\n          this.setState(\n            (prevState) => {\n              let score = this.state.score;\n              let output = \"\";\n              this.state.userAnswer ===\n                this.state.quizData[this.state.currentQuestionIndex]\n                  .correct_answer && score++;\n              this.state.userAnswer ===\n              this.state.quizData[this.state.currentQuestionIndex]\n                .correct_answer\n                ? (output = \"✅\")\n                : (output = \"❌\");\n              return {\n                isFinished: true,\n                done: false,\n                userData: prevState.userData.concat(this.state.userAnswer),\n                score: score,\n                output: prevState.output.concat(output),\n              };\n            },\n            () => {\n              this.setState({\n                options: this.getOptions(),\n              });\n            }\n          );\n        } else {\n          this.setState({\n            error: \"Select an option to proceed...\",\n          });\n        }\n      }\n    } else {\n      this.setState((prevValue) => {\n        if (e.target.innerText === prevValue.userAnswer) {\n          return {\n            done: !prevValue.done,\n            userAnswer: null,\n          };\n        } else {\n          return {\n            done: true,\n            userAnswer: e.target.innerText,\n            error: null,\n          };\n        }\n      });\n    }\n  };\n\n  componentDidMount() {\n    fetch(\n      `https://opentdb.com/api.php?amount=10&category=${this.props.match.params.id}&type=multiple`\n    )\n      .then((data) => {\n        return data.json();\n      })\n      .then((data) => {\n        this.setState(\n          {\n            quizId: this.props.match.params.id,\n            quizData: data.results,\n          },\n          () => {\n            this.setState({\n              options: this.getOptions(),\n            });\n          }\n        );\n      });\n  }\n\n  render() {\n    return (\n      <div className=\"quiz\">\n        <div\n          className=\"title my-5 pt-4 has-text-dark\"\n          style={{ textAlign: \"center\" }}\n        >\n          Category:{\" \"}\n          <span>\n            {this.state.quizId ? this.state.quizData[0].category : \"loading...\"}\n          </span>{\" \"}\n        </div>\n        {this.state.isFinished ? (\n          <>\n            <div className=\"title has-text-danger\">\n              Your Score: {this.state.score}\n            </div>\n            <table className=\"table is-fullwidth is-bordered is-striped\">\n              <thead>\n                <tr>\n                  {\" \"}\n                  <th>Question</th> <th>Correct Answer</th> <th>Your Answer</th>\n                  <th>Right/Wrong?</th>\n                </tr>\n              </thead>\n              <tbody>\n                {this.state.quizData.map((question, index) => {\n                  return (\n                    <>\n                      <tr>\n                        <td className=\"has-text-weight-bold\">\n                          {question.question}\n                        </td>\n                        <td className=\"has-text-centered\">\n                          {question.correct_answer}\n                        </td>\n                        <td className=\"has-text-centered\">\n                          {this.state.userData[index]}\n                        </td>\n                        <td className=\"has-text-centered\">\n                          {this.state.output[index]}\n                        </td>\n                      </tr>\n                    </>\n                  );\n                })}\n              </tbody>\n            </table>\n          </>\n        ) : (\n          <div class=\"columns is-centered is-multiline mx-4 py-6\">\n            {this.state.quizId ? (\n              <div className=\"column is-10\">\n                <div className=\"subtitle has-text-success-dark\">\n                  Question {this.state.currentQuestionIndex + 1}/10{\" \"}\n                </div>\n                <progress\n                  class=\"progress is-success is-small\"\n                  value={(this.state.currentQuestionIndex + 1) * 10}\n                  max=\"100\"\n                ></progress>\n                <div>\n                  <div className=\"is-size-4 has-text-weight-bold box has-background-info-light\">\n                    {\n                      this.state.quizData[`${this.state.currentQuestionIndex}`]\n                        .question\n                    }\n                  </div>\n                  {this.state.options\n                    ? this.state.options.map((option) => {\n                        return (\n                          <div\n                            className={\n                              this.state.userAnswer === option\n                                ? `button is-fullwidth is-grey is-light my-5 py-5 has-background-success`\n                                : `button is-fullwidth is-grey is-light my-5 py-5`\n                            }\n                            onClick={this.handleClick}\n                          >\n                            {option}\n                          </div>\n                        );\n                      })\n                    : \"Loading...\"}\n                </div>\n\n                {this.state.error ? (\n                  <div className=\"has-text-danger has-text-centered\">\n                    {this.state.error}\n                  </div>\n                ) : (\n                  \"\"\n                )}\n                <div className=\"level\">\n                  <div className=\"level-left\"></div>\n                  <div className=\"level-right\">\n                    <div\n                      data-id=\"next\"\n                      className=\"button px-6 is-primary\"\n                      onClick={this.handleClick}\n                    >\n                      Next\n                    </div>\n                  </div>\n                </div>\n              </div>\n            ) : (\n              \"Starting Quiz...\"\n            )}\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default Quiz;\n","import React from \"react\";\nimport Menu from \"./Menu\";\nimport Quiz from \"./Quiz\";\nimport { Switch, Route, Link } from \"react-router-dom\";\n\nclass App extends React.Component {\n  constructor() {\n    super();\n  }\n\n  render() {\n    return (\n      <>\n        <svg\n          id=\"visual\"\n          viewBox=\"0 0 900 600\"\n          className=\"background-svg\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n          version=\"1.1\"\n        >\n          <rect x=\"0\" y=\"0\" width=\"960\" height=\"540\" fill=\"#FFFFFF\"></rect>\n          <path\n            d=\"M0 96L192 97L384 77L576 86L768 94L960 68L960 0L768 0L576 0L384 0L192 0L0 0Z\"\n            fill=\"#002233\"\n            stroke-linecap=\"square\"\n            stroke-linejoin=\"bevel\"\n          ></path>\n        </svg>\n        <div className=\"container\">\n          <div\n            className=\"altcampus columns is-centered is-multiline mx-4 py-4\"\n            style={{ marginTop: \"8px\" }}\n          >\n            <Link to=\"/\">\n              <span> quiz</span>App\n            </Link>\n          </div>\n\n          <Switch>\n            <Route path=\"/\" exact>\n              <Menu />\n            </Route>\n            <Route path=\"/quiz/:id\" component={Quiz} />\n            <Route path=\"*\">\n              <NoMatch />\n            </Route>\n          </Switch>\n        </div>\n      </>\n    );\n  }\n}\n\nfunction NoMatch() {\n  return (\n    <h2 className=\"has-text-danger title mt-6 has-text-centered\">\n      404: Page not found!\n    </h2>\n  );\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.min.css';\nimport App from './components/App';\nimport './index.css';\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Link\n  } from \"react-router-dom\";\n\n\nReactDOM.render(<Router><App/></Router>, document.getElementById('root'));"],"sourceRoot":""}